---
# Screwdriver API service definition
apiVersion: v1
kind: Service
metadata:
  name: sdapi
  namespace: default
  labels:
    app: screwdriver
    tier: api
spec:
  type: NodePort
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
  selector:
    app: screwdriver
    tier: api

---
# Screwdriver API deployment definition
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: sdapi
  namespace: default
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: screwdriver
      tier: api
  template:
    metadata:
      labels:
        app: screwdriver
        tier: api
    spec:
      serviceAccount: sd-build
      volumes:
        - name: cloudsql-instance-credentials
          secret:
            secretName: cloudsql-instance-credentials
        - name: ssl-certs
          hostPath:
            path: /etc/ssl/certs
        - name: cloudsql
          emptyDir: {}
      containers:
      # coludsql proxy container settings
        - name: cloudsql-proxy
          image: gcr.io/cloudsql-docker/gce-proxy:1.11
          command: ["/cloud_sql_proxy",
                    "--dir=/cloudsql",
                    "-instances=<INSTANCE_CONNECTION_NAME>=tcp:3306", # TODO: change instances to your INSTANCE_CONNECTION_NAME
                    "-credential_file=/secrets/cloudsql/credentials.json"]
          volumeMounts:
            - name: cloudsql-instance-credentials
              mountPath: /secrets/cloudsql
              readOnly: true
            - name: ssl-certs
              mountPath: /etc/ssl/certs
            - name: cloudsql
              mountPath: /cloudsql
        # screwdriver api container settings
        - name: screwdriver-api
          image: screwdrivercd/screwdriver:v0.5.185
          ports:
          - containerPort: 80
          # Validate that the service is started
          livenessProbe:
            httpGet:
              path: /v4/status
              port: 80
            initialDelaySeconds: 15
            timeoutSeconds: 1
          readinessProbe:
            httpGet:
              path: /v4/status
              port: 80
            initialDelaySeconds: 15
            timeoutSeconds: 1
          # Environment variables that point to your secrets in your secrets.yaml
          env:
            - name: DATASTORE_PLUGIN
              value: sequelize
            - name: DATASTORE_SEQUELIZE_DIALECT
              value: mysql
            - name: DATASTORE_SEQUELIZE_HOST
              value: 127.0.0.1
            - name: DATASTORE_SEQUELIZE_DATABASE
              value: screwdriver # TODO: change this to your database name
            - name: DATASTORE_SEQUELIZE_USERNAME
              valueFrom:
                secretKeyRef:
                  key: username
                  name: cloudsql-db-credentials
            - name: DATASTORE_SEQUELIZE_PORT
              value: "3306"
            - name: EXECUTOR_PLUGIN
              value: "k8s"
            - name: K8S_JOBS_NAMESPACE
              value: "default"
            - name: K8S_CPU_LOW
              value: "0.5"
            - name: K8S_MEMORY_LOW
              value: "0.5"
            - name: K8S_TOKEN
              valueFrom:
                secretKeyRef:
                  name: sd-build-token-ffm4q # TODO: change sd-build-token to your sd-build-token
                  key: token
            - name: LAUNCH_VERSION
              value: latest
            - name: LOG_VERSION
              value: latest 
            - name: PORT
              value: "80"
            - name: URI
              value: http://35.190.82.21 # TODO: change ip address to your ingress ip address
            - name: ECOSYSTEM_UI
              value: http://35.190.82.21 # TODO: change ip address to your ingress ip address
            - name: ECOSYSTEM_STORE
              value: http://35.190.82.21 # TODO: change ip address to your ingress ip address
            - name: IS_HTTPS
              value: "false"
            - name: SECRET_WHITELIST
              value: "[]"
            - name: SECRET_ADMINS
              value: "[]"
            - name: SECRET_COOKIE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: sd-secrets
                  key: cookie_pass
            - name: SECRET_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: sd-secrets
                  key: encryption_pass
            - name: SECRET_JWT_PRIVATE_KEY
              valueFrom:
                secretKeyRef:
                  name: sd-secrets
                  key: jwt_private
            - name: SECRET_JWT_PUBLIC_KEY
              valueFrom:
                secretKeyRef:
                  name: sd-secrets
                  key: jwt_public
            - name: SCM_SETTINGS
              valueFrom:
                secretKeyRef:
                  name: sd-secrets
                  key: scm_settings
